2. Difference between a Library and Framework?
A library is a collection of code that can be used to perform specific tasks. It is typically imported into a project and used as a set of tools to help with that project. A framework, on the other hand, is a set of conventions and tools that define how a web application should be structured and built. It provides a structure for the application and defines how the different pieces should fit together.

The main difference between a library and a framework is the level of abstraction. A library is a lower-level tool that provides specific functionality, while a framework defines a higher-level structure that an application should follow. This means that when using a library, you have more flexibility and control over how you use it, but you also have to do more work to fit it into your application. With a framework, you have less flexibility, but you also have less work to do because the framework provides a lot of the infrastructure and boilerplate code for you.

For example, imagine that you are building a web application and you want to add a feature that allows users to upload and resize images. You could use a library like ImageMagick to handle the image manipulation tasks, or you could use a framework like Django or Ruby on Rails, which provide built-in support for handling file uploads and image resizing.